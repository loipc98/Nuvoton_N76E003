C51 COMPILER V9.60.0.0   MAIN                                                              09/09/2020 14:35:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "Common.h"
   3          #include "Delay.h"
   4          #include "SFR_Macro.h"
   5          #include "Function_define.h"
   6          
   7          int adc_value;
   8          bit received_flag = 0;
   9          int cnt = 0;
  10          // Khoi tao SPI
  11          void SPI_Initial(void)
  12          { 
  13   1          P15_Quasi_Mode;           // P15 (SS) Quasi mode
  14   1          P10_Quasi_Mode;           // P10(SPCLK) Quasi mode
  15   1          P00_Quasi_Mode;           // P00 (MOSI) Quasi mode
  16   1          P01_Quasi_Mode;           // P22 (MISO) Quasi mode
  17   1                  
  18   1          set_P0S_5;                //Schmitt triggered input select.
  19   1          
  20   1          clr_MSTR;                 // che do Slave
  21   1          clr_LSBFE;                // Gui byte cao truoc
  22   1      
  23   1          clr_CPOL;                 // SPCLK o muc thap khi trang thai nghi
  24   1          set_CPHA;                 // Doc du lieu o canh 2    
  25   1          
  26   1          set_EA;                     // Cho phep ngat toan cuc
  27   1          set_ESPI;                   // Cho phep ngat SPI
  28   1        
  29   1          set_SPIEN;                // Khoi tao SPI
  30   1          clr_SPIF;                 // Xoa co ngat
  31   1      }
  32          // Dat chu ky PWM
  33          void set_PWM_period(unsigned int period_value)    
  34          {
  35   1        PWMPL = period_value & 0x00FF;
  36   1        PWMPH = (period_value & 0xFF00)>>8;
  37   1      }
  38          
  39           // Thiet lap do rong xung PWM
  40          void set_PWM_on(unsigned int on_value)            //set do rong xung
  41          {
  42   1        PWM2L = (on_value & 0x00FF);
  43   1        PWM2H = ((on_value & 0xFF00) >> 8);
  44   1        set_LOAD;
  45   1      }
  46          
  47          // Khoi tao PWM
  48          void PWM_Initial(void)
  49          {
  50   1        PWM2_P05_OUTPUT_ENABLE;
  51   1        PWM_IMDEPENDENT_MODE;
  52   1        PWM_CLOCK_DIV_8;
  53   1        set_PWM_period(4095);
  54   1        set_PWMRUN;
C51 COMPILER V9.60.0.0   MAIN                                                              09/09/2020 14:35:37 PAGE 2   

  55   1      }
  56          void setup(void)
  57          {
  58   1        Set_All_GPIO_Quasi_Mode;
  59   1        P05=0x00;
  60   1        SPI_Initial();
  61   1        PWM_Initial();
  62   1        // Khoi tao ADC
  63   1        Enable_ADC_AIN5;            // Khoi tao ADC pin 4
  64   1        InitialUART0_Timer1(9600);
  65   1        TI = 1;
  66   1        SPDR = 0x02;
  67   1      }
  68          
  69          void adc_read(void)
  70          {                                     
  71   1          clr_ADCF;                 // Xoa co, neu ADCF=1 thi ko the chuyen doi 
  72   1          set_ADCS;                 // ADCS=1 trong suot qua trinh chuyen doi, 
  73   1          while(ADCF == 0);         // ADCF = 0, chuyen doi hoan tat
  74   1          adc_value = ADCRH<<4;     // Doc gia tri ADC
  75   1          adc_value |= ADCRL;
  76   1          set_PWM_on(adc_value);    // Xuat xung PWM
  77   1          Timer0_Delay1ms(20);  
  78   1      }
  79          void main()
  80          {
  81   1        setup();
  82   1        while(1)
  83   1        {
  84   2          adc_read();
  85   2          printf("%d\n",adc_value);
  86   2          Timer0_Delay1ms(100);
  87   2        }
  88   1      }
  89          
  90          void SPI_ISR(void) interrupt 9
  91          {       
  92   1          clr_SPIF;
  93   1          if(cnt == 0)
  94   1          {       
  95   2            if(SPDR == 0x01)
  96   2            {
  97   3              SPDR = adc_value >> 8;
  98   3            }
  99   2          }
 100   1          else if (cnt == 1)
 101   1          {
 102   2            SPDR = adc_value & 0xFF;
 103   2          }
 104   1          cnt ++ ;
 105   1          if(cnt==3)
 106   1          {
 107   2            cnt=0;
 108   2            SPDR = 0x02;
 109   2          }
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              09/09/2020 14:35:37 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
