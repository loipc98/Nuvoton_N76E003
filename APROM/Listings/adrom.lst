C51 COMPILER V9.60.0.0   ADROM                                                             09/11/2020 08:16:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADROM
OBJECT MODULE PLACED IN .\Objects\adrom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE adrom.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include) DEFINE(FOSC_160000) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\adrom.lst) TABS(2) OBJECT(.\Objects\adrom.obj)

line level    source

   1          //********************************************************************************************************
             -***
   2          //  File Function: N76E003 APROM program DATAFLASH as EEPROM way 
   3          //********************************************************************************************************
             -***
   4          #include "N76E003.h"
   5          #include "Common.h"
   6          #include "Delay.h"
   7          #include "SFR_Macro.h"
   8          #include "Function_define.h"
   9          
  10          volatile unsigned char xdata page_buffer[128];
  11          
  12          //Ham doc byte APROM cho truoc dia chi
  13          UINT8 Read_APROM_BYTE(UINT16 code *u16_addr)
  14          {
  15   1        UINT8 rdata;
  16   1        rdata = *u16_addr>>8;
  17   1        return rdata;
  18   1      } 
  19          //Ham ghi du lieu flashdata voi du lieu va dia chi
  20          void Write_DATAFLASH_BYTE(unsigned int u16EPAddr,unsigned char u8EPData) //0x3802,0x34
  21          {
  22   1        unsigned char looptmp=0; //bien lap
  23   1        unsigned int u16_addrl_r;//bien luu dia chi tren XRAM
  24   1        unsigned int RAMtmp;     
  25   1        
  26   1        // Kiem tra dia chi bat dau trang
  27   1        u16_addrl_r=(u16EPAddr/128)*128; //0x3800
  28   1        //Save APROM data to XRAM0         
  29   1        for(looptmp=0;looptmp<0x80;looptmp++)  //128
  30   1        {
  31   2          RAMtmp = Read_APROM_BYTE((unsigned int code *)(u16_addrl_r+looptmp)); //doc lan luot cac dia chi 
  32   2          page_buffer[looptmp]=RAMtmp;     //(0x3800+looptmp)
  33   2        }
  34   1      // Modify customer data in XRAM 
  35   1          page_buffer[u16EPAddr&0x7f] = u8EPData;     //luu gia tri u8EPData vao page_buffer trong XRAM (page_buff
             -er[0x3802 & 0x7f] = 0x34)
  36   1        
  37   1      //Erase APROM DATAFLASH page
  38   1          IAPAL = u16_addrl_r&0xff;                  //Lay 8 bit thap 0x3800: 0x00
  39   1          IAPAH = (u16_addrl_r>>8)&0xff;           //Lay 8 bit cao 0x3800: 0x38
  40   1          IAPFD = 0xFF;                           
  41   1          set_IAPEN;                              // Enable Function IAP
  42   1          set_APUEN;                              //APROM updated enable
  43   1          IAPCN = 0x22;                           //Mode APROM page-erase
  44   1          set_IAPGO;                              //
  45   1          
  46   1      //Save changed RAM data to APROM DATAFLASH
  47   1          set_IAPEN;                             //Enable Function IAP
  48   1          set_APUEN;                             //APROM updated enable
  49   1          IAPCN = 0x21;                          // IAPFD: Data in
  50   1          for(looptmp=0;looptmp<0x80;looptmp++)
  51   1          {
C51 COMPILER V9.60.0.0   ADROM                                                             09/11/2020 08:16:41 PAGE 2   

  52   2            IAPAL = (u16_addrl_r&0xff)+looptmp;  // (0x3800&0xff)+looptmp= 0x00+ looptmp
  53   2            IAPAH = (u16_addrl_r>>8)&0xff;       // 0x38
  54   2            //Dia chi 0x3800
  55   2            IAPFD = page_buffer[looptmp];
  56   2            set_IAPGO;      
  57   2          }
  58   1          clr_APUEN;
  59   1          clr_IAPEN;
  60   1      } 
  61            
  62          /*********************************************************************************************************
             -*********/  
  63          
  64          
  65          void main (void) 
  66          {
  67   1          UINT8 datatemp;
  68   1      /* -------------------------------------------------------------------------*/
  69   1      /*  Dataflash use APROM area, please ALWAYS care the address of you code    */
  70   1      /*  APROM 0x3800~0x38FF demo as dataflash                                   */
  71   1      /*  Please use Memory window key in C:0x3800 to check earse result          */        
  72   1      /* -------------------------------------------------------------------------*/
  73   1          P05_Quasi_Mode;
  74   1          InitialUART0_Timer1(9600);
  75   1          TI=1;
  76   1      //    Write_DATAFLASH_BYTE (0x3805,'a');
  77   1          P05=0;
  78   1          if(Read_APROM_BYTE(0x3802)==0x01)
  79   1          {
  80   2            P05= Read_APROM_BYTE(0x3805);
  81   2          }
  82   1          Timer0_Delay1ms(2000);
  83   1          Write_DATAFLASH_BYTE (0x3805,0xFF);
  84   1          Write_DATAFLASH_BYTE (0x3802,0x01);
  85   1          while(1)
  86   1          {
  87   2          //call read byte
  88   2          datatemp = Read_APROM_BYTE(0x3805);
  89   2          P05= datatemp;
  90   2          Send_Data_To_UART0(datatemp);
  91   2          }
  92   1      }
  93          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
